var a = 1;
var b = 1;
var temp = 0;

func compute() {
    var e = 10;
    var f = 100;
    print e + f;
}
compute();

func compute2() {
    var a = 10;
    {
        var b = 10;
        print a;
        print b;
    }
}

compute2();
print a;
print b;

var a = 10;
print a;

//exit();

for (var i = 0; i < 10; i = i + 1) {
    for (var j = 0; j < 10; j = j + 1) {
        print i * 10 + j;
    }
}


func sayHi(first, last) {
    print "Hello there, " + first + " " + last + ";";
}

func addNumbers(a, b, c, d) {
    print "The sum is";
    print a + b + c + d;
}

func getAddedNumbers(a, b) {
    return a + b;
}

print "Printing out the first 20 numbers of fibbonachi sequence";
for (var i = 1; i < 20; i = i + 1) {
    print a;
    temp = a;
    a = b;
    b = temp + b;
    if (i == 2) {
        print "it is 2 for once";
    } else {
        print "i is not 2. REEEEEEEEEEE";
    }
    if (i == 11) {
        break;
    }
}

var meh = 10;
while (meh > 4) {
    print meh;
    meh = meh - 1;
    if (meh == 6) break;
    if (meh == 7) print "I am 7 now";
}

print "DONE";

print clock();
sayHi("Ahmed Hamza", "Aydin");
addNumbers(1, getAddedNumbers(2, 3), (false? 1 : 2), 1);
print addNumbers;

func testFunc(condition) {
    print "This is inside the testFunc";
    if (condition) {
        print "The condition was true";
        return true;
    }

    print "The condition was not true";
    return false;
}

print "";
var result = testFunc(1 == 1);
print result;
result = testFunc(1 != 1);
print result;
print clock();

print "";

func makeCounter() {
  var i = 0;
  func count() {
    i = i + 1;
    print i;
  }

  return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".

func testFunc2(lFunc, param2) {
    print "testFunc2";
    lFunc(12312);
    print "param2 is ";
    print param2;
}

testFunc2([a]{
        print "something";
        print a;
    },
    "kebab"
);

var lambdaFunc = [a, b]{
    print "This is the lambda function";
    print a + b * 10;
};
print lambdaFunc;
lambdaFunc(10, 10);
lambdaFunc = 10;
print lambdaFunc;

var meh = (1 != 1) ? 2 : 3;
print meh;

func ttt(a) {
    print a;
}

testFunc2(ttt, "meh");
